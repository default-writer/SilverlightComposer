//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34003
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightApplication2.SaveXmlServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="SaveXmlServiceReference.SaveXmlService")]
    public interface SaveXmlService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaveXmlService/SaveXml", ReplyAction="urn:SaveXmlService/SaveXmlResponse")]
        System.IAsyncResult BeginSaveXml(string xmlData, System.AsyncCallback callback, object asyncState);
        
        void EndSaveXml(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SaveXmlServiceChannel : SilverlightApplication2.SaveXmlServiceReference.SaveXmlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveXmlServiceClient : System.ServiceModel.ClientBase<SilverlightApplication2.SaveXmlServiceReference.SaveXmlService>, SilverlightApplication2.SaveXmlServiceReference.SaveXmlService {
        
        private BeginOperationDelegate onBeginSaveXmlDelegate;
        
        private EndOperationDelegate onEndSaveXmlDelegate;
        
        private System.Threading.SendOrPostCallback onSaveXmlCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SaveXmlServiceClient() {
        }
        
        public SaveXmlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SaveXmlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaveXmlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaveXmlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveXmlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.SaveXmlServiceReference.SaveXmlService.BeginSaveXml(string xmlData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveXml(xmlData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SilverlightApplication2.SaveXmlServiceReference.SaveXmlService.EndSaveXml(System.IAsyncResult result) {
            base.Channel.EndSaveXml(result);
        }
        
        private System.IAsyncResult OnBeginSaveXml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xmlData = ((string)(inValues[0]));
            return ((SilverlightApplication2.SaveXmlServiceReference.SaveXmlService)(this)).BeginSaveXml(xmlData, callback, asyncState);
        }
        
        private object[] OnEndSaveXml(System.IAsyncResult result) {
            ((SilverlightApplication2.SaveXmlServiceReference.SaveXmlService)(this)).EndSaveXml(result);
            return null;
        }
        
        private void OnSaveXmlCompleted(object state) {
            if ((this.SaveXmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveXmlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveXmlAsync(string xmlData) {
            this.SaveXmlAsync(xmlData, null);
        }
        
        public void SaveXmlAsync(string xmlData, object userState) {
            if ((this.onBeginSaveXmlDelegate == null)) {
                this.onBeginSaveXmlDelegate = new BeginOperationDelegate(this.OnBeginSaveXml);
            }
            if ((this.onEndSaveXmlDelegate == null)) {
                this.onEndSaveXmlDelegate = new EndOperationDelegate(this.OnEndSaveXml);
            }
            if ((this.onSaveXmlCompletedDelegate == null)) {
                this.onSaveXmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveXmlCompleted);
            }
            base.InvokeAsync(this.onBeginSaveXmlDelegate, new object[] {
                        xmlData}, this.onEndSaveXmlDelegate, this.onSaveXmlCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication2.SaveXmlServiceReference.SaveXmlService CreateChannel() {
            return new SaveXmlServiceClientChannel(this);
        }
        
        private class SaveXmlServiceClientChannel : ChannelBase<SilverlightApplication2.SaveXmlServiceReference.SaveXmlService>, SilverlightApplication2.SaveXmlServiceReference.SaveXmlService {
            
            public SaveXmlServiceClientChannel(System.ServiceModel.ClientBase<SilverlightApplication2.SaveXmlServiceReference.SaveXmlService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveXml(string xmlData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xmlData;
                System.IAsyncResult _result = base.BeginInvoke("SaveXml", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveXml(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveXml", _args, result);
            }
        }
    }
}
